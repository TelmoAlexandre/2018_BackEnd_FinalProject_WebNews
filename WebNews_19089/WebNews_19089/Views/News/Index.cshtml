@model WebNews_19089.Models.NewsWithPageModelView

@{
    ViewBag.Title = "Web Paper";
}

<div class="col-12 searchOption">
    <form action="/News/Index" method="post" class="search-container">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.category)

        <div class="searchInput">
            <input name="searchFilter" id="search-box" type="text" placeholder="Insert your search here..." class="search-box" />
            <label for="search-box"><span class="glyphicon glyphicon-search search-icon blink"></span></label>
            <input type="submit" value="Search" class="btn" id="search-submit" />
        </div>

    </form>
</div>




@if (Model.News.Count != 0)
{
    foreach (var news in Model.News)
    {

        <div class="newsBlock col-4">
            <h1 class="newsTitle">
                @Html.ActionLink("" + news.Title, "Details", new { id = news.ID })
            </h1>
            <p class="newsDescription">
                @Html.DisplayFor(modelNews => news.Description)
            </p>

            @*
                Caso o utilizador logado seja administrator ou editor de redação ele pode alterar a noticia
            *@

            @{

                bool author = false;

                foreach (var user in news.UsersProfileList)
                {
                    // Se o utilizador autenticado for algum dos autores
                    if (user.UserName == User.Identity.Name)
                    {
                        author = true;
                    }
                }

                if (User.IsInRole("Admin") || User.IsInRole("NewsEditor") || author)
                {

                    <div class="newsOptions">

                        <span>|</span>
                        @Html.ActionLink("Edit", "Edit", new { id = news.ID }, new { @class = "newsOptionLink" })
                        <span>|</span>

                        @if (User.IsInRole("Admin"))
                        {

                            <span>|</span>
                            @Html.ActionLink("Delete", "Delete", new { id = news.ID }, new { @class = "newsOptionLink" })
                            <span>|</span>

                        }

                    </div>

                }
            }

        </div>

    }

}
else
{
    <div class="noFoundNews col-12">
        <h1>No News were found.</h1>
    </div>
}




<div class="col-12 row pageOption">
    <div class="col-6 previousPage">
        @*
            Se não estiver na primeira página, mostra o link para retornar à pagina anterior
        *@
        @if (!Model.firstPage)
        {
            @Html.ActionLink("< Previous Page", "Index", new { category = Model.category, pageNum = (Model.pageNum - 1) })
        }

    </div>
    <div class="col-6 nextPage">
        @*
            Se não estiver na última página, mostra o link para ir para a próxima página
        *@
        @if (!Model.lastPage)
        {
            @Html.ActionLink("Next Page >", "Index", new { category = Model.category, pageNum = (Model.pageNum + 1) })
        }
    </div>
</div>